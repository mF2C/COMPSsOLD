#!/bin/bash

  # Obtain parameters
  COMPSs_exec=$1
  comm=$2
  runcompss_opts=$3
  base_app_dir=$4
  COMPSs_log_folder=$5
  target_log_folder=$6
  retryNum=$7
  
  # Global exit variable
  exitValue=0
  
  #----------------------------------------------------------------------------------
  # Generate Project.xml according to system
  sed -i '/<InstallDir>/c<InstallDir>'"${COMPSS_HOME}"'<\/InstallDir>' "${base_app_dir}"/project.xml
  
  declare -a tests=("testNonExistingInFile" "testReschedulingFail" "testAllBlocked")

  #----------------------------------------------------------------------------------
  # Run tests
  i=0
  while [ $i -lt ${#tests[@]} ]; do
    test=${tests[$i]}
    i=$((i + 1))
	  
    echo "*** RUNNING JAVA APPLICATION ErrorManager_$test"
    mkdir -p "${target_log_folder}"/"$test"
	  
    #----------------------------------------------------------------------------------
    # Create all working dir folders
    mkdir -p /tmp/COMPSsWorker01/
    mkdir -p /tmp/COMPSsWorker02/
  
    output_log="${target_log_folder}/$test/errorManagement_${test}_0${retryNum}.outputlog"
    error_log="${target_log_folder}/$test/errorManagement_${test}_0${retryNum}.errorlog"
    expectedTime=80s
	  
    # shellcheck disable=SC2086
    timeout --signal=2 $expectedTime "${COMPSs_exec}" \
       --project="${base_app_dir}"/project.xml \
       --resources="${base_app_dir}"/resources.xml \
       \
       --comm="$comm" \
       \
       --debug \
       ${runcompss_opts} \
       \
       --classpath="${base_app_dir}"/ErrorManagerTest.jar \
       \
       ${test}.Main 2>&1 | tee "${output_log}" | tee "${error_log}"
    
    # Check timeout
    if [[ "$?" = "124" ]]; then
      # Copy LOG files
      cp -rf "${COMPSs_log_folder}"/"${test}".Main_0"${retryNum}"/* "${target_log_folder}"/"$test"
    
      # Report time out
      echo "[WARNING] Java Application timed out" >> "${output_log}"
      exitValue=124
    else
      # Copy LOG files
      cp -rf "${COMPSs_log_folder}"/"${test}".Main_0"${retryNum}"/* "${target_log_folder}"/"$test"
    fi
	 
    #----------------------------------------------------------------------------------
    # Sleep between applications
    sleep 1s
  done

  #----------------------------------------------------------------------------------
  # Check result
  "${base_app_dir}"/result "${target_log_folder}" "${retryNum}"
  exitValue=$?
     
  # Return execution status
  exit $exitValue
