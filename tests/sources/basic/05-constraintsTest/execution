#!/bin/bash

  # Obtain parameters
  COMPSs_exec=$1
  comm=$2
  runcompss_opts=$3
  base_app_dir=$4
  COMPSs_log_folder=$5
  target_log_folder=$6
  retryNum=$7
  
  # Global exit variable
  exitValue=0
  
  #----------------------------------------------------------------------------------
  # Generate Project.xml according to system
  sed -i '/<InstallDir>/c<InstallDir>'"${COMPSS_HOME}"'<\/InstallDir>' "${base_app_dir}"/project_constraintManager.xml
  sed -i '/<InstallDir>/c<InstallDir>'"${COMPSS_HOME}"'<\/InstallDir>' "${base_app_dir}"/project_resourceManager_Compatible.xml
  sed -i '/<InstallDir>/c<InstallDir>'"${COMPSS_HOME}"'<\/InstallDir>' "${base_app_dir}"/project_resourceManager_Available.xml
  sed -i '/<InstallDir>/c<InstallDir>'"${COMPSS_HOME}"'<\/InstallDir>' "${base_app_dir}"/project_cloudManager.xml
  sed -i '/<InstallDir>/c<InstallDir>'"${COMPSS_HOME}"'<\/InstallDir>' "${base_app_dir}"/project_dynamicTest.xml
  sed -i '/<InstallDir>/c<InstallDir>'"${COMPSS_HOME}"'<\/InstallDir>' "${base_app_dir}"/project_multiProcessor.xml
  
  #----------------------------------------------------------------------------------
  # Perform executions
  declare -a tests_names=('constraintManager' 'resourceManager_Compatible' 'resourceManager_Available' 'cloudManager' 'dynamicTest' 'multiProcessor')
  declare -a tests=('constraintManager.Test' 'resourceManager.TestCompatible' 'resourceManager.TestAvailable' 'cloudManager.Test' 'dynamicTest.DynamicTest' 'multiProcessor.TestAvailable')  
  
  exitValue=0
  i=0
  while [ $i -lt ${#tests[@]} ]; do
    test=${tests[$i]}
    test_name=${tests_names[$i]}
    #----------------------------------------------------------------------------------
    # Create all working dir folders
    mkdir -p /tmp/COMPSsWorker01/
    mkdir -p /tmp/COMPSsWorker02/
    mkdir -p /tmp/COMPSsWorker03/
    mkdir -p /tmp/COMPSsWorker04/
    mkdir -p /tmp/COMPSsWorker05/
    
    #----------------------------------------------------------------------------------
    # Run application
    echo
    echo "*** RUNNING JAVA APPLICATION CONSTRAINTS TEST - $test"
    log_folder="${target_log_folder}/$test"
    mkdir -p "${log_folder}"
    output_log="${log_folder}/constraintsTest_${test_name}_0${retryNum}.outputlog"
    error_log="${log_folder}/constraintsTest_${test_name}_0${retryNum}.errorlog"
    expectedTime=60s

    # shellcheck disable=SC2086
    timeout --signal=2 $expectedTime "${COMPSs_exec}" \
      --project=${base_app_dir}/project_${test_name}.xml \
      --resources=${base_app_dir}/resources_${test_name}.xml \
      \
      --comm="$comm" \
      \
      --debug \
      ${runcompss_opts} \
      \
      --classpath="${base_app_dir}"/constraintsTest.jar \
      \
      $test > >(tee "${output_log}") 2> >(tee "${error_log}" >&2)
  
    # Check timeout
    ev1=0
    if [[ "$?" = "124" ]]; then
      # Copy LOG files
      cp -rf "${COMPSs_log_folder}"/"${test}"_0"${retryNum}"/* "${log_folder}"
     
      # Report time out
      echo "[WARNING] Java Application timed out" >> "${output_log}"
      ev1=124
    else
      # Copy LOG files
      cp -rf "${COMPSs_log_folder}"/"${test}"_0"${retryNum}"/* "${log_folder}"
  
      # Check result
      "${base_app_dir}"/result_"${test_name}" "${output_log}" "${log_folder}"
      ev1=$?
    fi
    
    # Update exitValue
    if [ $ev1 -ne 0 ]; then
      exitValue=$ev1
    fi
    
    # Increase counter
    i=$((i+1))
    
    # Sleep between applications
    sleep 1s
  done
  
  #----------------------------------------------------------------------------------
  # Return execution status
  exit $exitValue
