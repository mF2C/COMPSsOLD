#!/bin/bash -e

  #Obtain parameters
  COMPSs_exec=$1
  comm=$2
  runcompss_opts=$3
  base_app_dir=$4
  COMPSs_log_folder=$5
  target_log_folder=$6
  retryNum=$7

  #Global exit variable
  exitValue=0

  #----------------------------------------------------------------------------------
  #Generate Project.xml according to system
  sed -i '/<InstallDir>/c<InstallDir>'${COMPSS_HOME}'<\/InstallDir>' ${base_app_dir}/project.xml

  #----------------------------------------------------------------------------------
  #Create all working dir folders
  mkdir -p /tmp/COMPSsWorker01/

  #----------------------------------------------------------------------------------
  #Run application 1 - Test
  echo
  echo "*** RUNNING PYTHON INTERPRETER TEST"
  output_log="${target_log_folder}/python_interpreter_test_0${retryNum}.outputlog"
  error_log="${target_log_folder}/python_interpreter_test_0${retryNum}.errorlog"
  expectedTime=720s

  timeout --signal=2 $expectedTime ${COMPSs_exec} \
     --pythonpath=${base_app_dir}/src \
     --project=${base_app_dir}/project.xml \
     --resources=${base_app_dir}/resources.xml \
     --debug \
     --comm=$comm \
     ${runcompss_opts} \
     --lang=python \
     --python_interpreter=python2 \
     ${base_app_dir}/src/py2.py > >(tee ${output_log}) 2> >(tee ${error_log} >&2)

  #Check timeout
  if [[ "$?" = "124" ]]; then
     #Copy LOG files
     cp -rf ${COMPSs_log_folder}/py2.py_0${retryNum}/* ${target_log_folder}

     #Report timeout
     echo "[WARNING] Python Application timed out" >> ${output_log}
     exitValue=124
  else
     #Copy LOG files
     cp -rf ${COMPSs_log_folder}/py2.py_0${retryNum}/* ${target_log_folder}
  fi

  timeout --signal=2 $expectedTime ${COMPSs_exec} \
     --pythonpath=${base_app_dir}/src \
     --project=${base_app_dir}/project.xml \
     --resources=${base_app_dir}/resources.xml \
     --debug \
     --comm=$comm \
     ${runcompss_opts} \
     --lang=python \
     --python_interpreter=python3 \
     ${base_app_dir}/src/py3.py > >(tee ${output_log}) 2> >(tee ${error_log} >&2)

  #Check timeout
  if [[ "$?" = "124" ]]; then
     #Copy LOG files
     cp -rf ${COMPSs_log_folder}/py3.py_0${retryNum}/* ${target_log_folder}

     #Report timeout
     echo "[WARNING] Python Application timed out" >> ${output_log}
     exitValue=124
  else
     #Copy LOG files
     cp -rf ${COMPSs_log_folder}/py3.py_0${retryNum}/* ${target_log_folder}
  fi

  #Check result
  ${base_app_dir}/result ${output_log} ${error_log} ${target_log_folder}
  exitValue=$?


  #----------------------------------------------------------------------------------
  #Return execution status
  exit $exitValue
