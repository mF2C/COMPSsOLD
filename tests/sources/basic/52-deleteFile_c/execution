#!/bin/bash

  # Obtain parameters
  COMPSs_exec=$1
  comm=$2
  runcompss_opts=$3
  base_app_dir=$4
  COMPSs_log_folder=$5
  target_log_folder=$6
  retryNum=$7
 
  # Global exit variable
  exitValue=0

  #----------------------------------------------------------------------------------
  # Compiling C app
  cd "${base_app_dir}" || exit 1
  "$(dirname "${COMPSs_exec}")"/compss_build_app Simple
  errCode=$?
  if [ $errCode -ne 0 ]; then
     echo "[ERROR] Cannot compile C app. See errors above."
     exit $errCode
  fi

  #----------------------------------------------------------------------------------
  # Generating project.xml
  sed -i '/<InstallDir>/c<InstallDir>'"${COMPSS_HOME}"'<\/InstallDir>' "${base_app_dir}"/project.xml
  sed -i '/<AppDir>/c<AppDir>'"${base_app_dir}"'\/<\/AppDir>' "${base_app_dir}"/project.xml

  #----------------------------------------------------------------------------------
  # Create all working dir folders
  mkdir -p /tmp/COMPSsWorker01/

  #----------------------------------------------------------------------------------
  # Run application 1 - Test
  echo
  echo "*** RUNNING C APPLICATION TEST"
  output_log="${target_log_folder}/simple_c_0${retryNum}.outputlog"
  error_log="${target_log_folder}/simple_c_0${retryNum}.errorlog"
  counterVal=1
  expectedTime=30s

  # shellcheck disable=SC2086
  timeout --signal=2 $expectedTime "${COMPSs_exec}" \
     --project="${base_app_dir}"/project.xml \
     --resources="${base_app_dir}"/resources.xml \
     \
     --comm="$comm" \
     \
     --debug \
     ${runcompss_opts} \
     \
     --lang=c \
     \
     "${base_app_dir}"/master/Simple $counterVal > >(tee "${output_log}") 2> >(tee "${error_log}" >&2)
  
  # Check timeout
  if [[ "$?" = "124" ]]; then
     # Copy LOG files
     cp -rf "${COMPSs_log_folder}"/Simple_0"${retryNum}"/* "${target_log_folder}"

     # Report time out
     echo "[WARNING] C Application timed out" >> "${output_log}"
     exitValue=124
  else
     # Copy LOG files
     cp -rf "${COMPSs_log_folder}"/Simple_0"${retryNum}"/* "${target_log_folder}"

     # Check result
     "${base_app_dir}"/result "${output_log}" "${target_log_folder}" "${error_log}"
     exitValue=$?
  fi
  
  #----------------------------------------------------------------------------------
  # Return execution status
  exit $exitValue
