#!/bin/bash

  # Obtain parameters
  COMPSs_exec=$1
  comm=$2
  runcompss_opts=$3
  base_app_dir=$4
  COMPSs_log_folder=$5
  target_log_folder=$6
  retryNum=$7
  pythonInterpreter=$8

  # Global exit variable
  exitValue=0

  #----------------------------------------------------------------------------------
  # Generate Project.xml according to system
  sed -i '/<InstallDir>/c<InstallDir>'"${COMPSS_HOME}"'<\/InstallDir>' "${base_app_dir}"/project.xml

  #----------------------------------------------------------------------------------
  # Create all working dir folders
  mkdir -p /tmp/COMPSsWorker01/

  #----------------------------------------------------------------------------------
  # Run application 1 - Test
  echo
  echo "*** RUNNING JUPYTER-NOTEBOOK PYTHON APPLICATION TEST"
  output_log="${target_log_folder}/jupyternotebook_python_0${retryNum}.outputlog"
  error_log="${target_log_folder}/jupyternotebook_python_0${retryNum}.errorlog"
  expectedTime=60s

  if [[ $comm == *"GAT"* ]]; then
    echo "Running a jupyter notebook test with GAT"
    timeout --signal=2 $expectedTime \
      jupyter nbconvert \
      --execute "${base_app_dir}"/src/simpleGAT.ipynb > >(tee "${output_log}") 2> >(tee "${error_log}" >&2)
  else
    echo "Running a jupyter notebook test with NIO"
    timeout --signal=2 $expectedTime \
      jupyter nbconvert \
      --execute "${base_app_dir}"/src/simple.ipynb > >(tee "${output_log}") 2> >(tee "${error_log}" >&2)
  fi

  # Check timeout
  if [[ "$?" = "124" ]]; then
     # Copy LOG files
     cp -rf "${COMPSs_log_folder}"/Interactive_0"${retryNum}"/* "${target_log_folder}"

     # Report timeout
     echo "[WARNING] Python Application timed out" >> "${output_log}"
     exitValue=124
  else
     # Copy LOG files
     cp -rf "${COMPSs_log_folder}"/Interactive_0"${retryNum}"/* "${target_log_folder}"

     # Check result
     "${base_app_dir}"/result "${output_log}" "${error_log}" "${target_log_folder}" "${base_app_dir}" "${comm}"
     exitValue=$?
  fi

  #----------------------------------------------------------------------------------
  # Return execution status
  exit $exitValue
