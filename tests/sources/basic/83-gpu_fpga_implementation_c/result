#!/bin/bash -e

  #Obtain parameters
  output_file=$1 
  target_log_folder=$2
  error_file=$3

  # Log files
  runtime_log="${target_log_folder}/runtime.log"

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f ${output_file} ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 ${output_file})
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
        exit 1
     fi
  else
     echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a ${output_file}
     exit 1
  fi
  # Check that ErrorManager has not generated any ERROR or FATAL message.
  if $(cat "${output_file}" "${runtime_log}" | tr '\n' ' ' | grep -E -q "[ERRMGR].*(ERROR|FATAL):.*.*Shutting"); then
    echo "ERROR: ERRMGR RAISED A FATAL ERROR. TEST FAILED." | tee -a ${output_file}
    exit 1
  fi
  # Check that JNI has not raised an error
  jniError=$(cat "${error_file}" | grep "Exception in thread" | cat)
  if [[ ! -z ${jniError} ]]; then
    echo "ERROR: JNI HAS RAISED A FATAL ERROR. TEST FAILED." | tee -a ${output_file}
    exit 1
  fi

  #---------------------------------------------------------------------------------- 
  # Compute result status
  result=$(cat ${output_file} | grep "The result is" | cut -c 15-)
  expected_result=4872.82 

  result=${result::-1}

  # Check if CPU, GPU and FPGA tasks were used
  usesCPU=$(grep -rnw "CPU" ${target_log_folder}/jobs/ | wc -l)
  usesFPGA=$(grep -rnw "FPGA" ${target_log_folder}/jobs/ | wc -l)
  usesGPU=$(grep -rnw "GPU" ${target_log_folder}/jobs/ | wc -l)
  FPGAreprogrammed=$(grep -rnwe 'Reprogramming FPGA with the command  This is an FPGA reprogram test' ${target_log_folder} | wc -l)

  echo "${usesCPU} CPU tasks were executed"
  echo "${usesGPU} GPU tasks were executed"
  echo "${usesFPGA} FPGA tasks were executed"
  echo "${FPGAreprogrammed} FPGAs reprogrammed"

  # Report result status
  if [ "$result" != "$expected_result" ] || [ "$usesCPU" -lt 1 ] || [ "$usesGPU" -lt 1 ] || [ "$usesFPGA" -lt 1 ] || [ "$FPGAreprogrammed" -eq 0 ]; then
     echo "ERROR ON TASKS SCHEDULE" | tee -a ${output_file}
     echo "EXPECTED RESULT: $expected_result" | tee -a ${output_file}
     echo "GOT: $result" | tee -a ${output_file}
     if [ "$usesCPU" -lt 1 ] ; then
       echo "No CPU tasks were executed!"
     fi
     if [ "$usesGPU" -lt 1 ] ; then
       echo "No GPU tasks were executed!"
     fi
     if [ "$usesFPGA" -lt 1 ] ; then
       echo "No FPGA tasks were executed!"
     fi
     if [ "$FPGAreprogrammed" -eq 0 ] ; then
       echo "Failed to reprogram the FPGA!"
     fi
     exit 1
  fi

  exit 0

