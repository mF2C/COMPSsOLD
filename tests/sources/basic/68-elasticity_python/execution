#!/bin/bash

  # Obtain parameters
  COMPSs_exec=$1
  comm=$2
  runcompss_opts=$3
  base_app_dir=$4
  COMPSs_log_folder=$5
  target_log_folder=$6
  retryNum=$7
  
  # Global variables
  exitValue=0
  
  #----------------------------------------------------------------------------------
  # Create project and resources XML
  sed -i '/<InstallDir>/c<InstallDir>'"${COMPSS_HOME}"'<\/InstallDir>' "${base_app_dir}"/project.xml
  
  #----------------------------------------------------------------------------------
  # Run application 1 - One Provider with PYTHON
  echo
  echo "*** RUNNING PYTHON APPLICATION ELASTICITY - ONE PROVIDER"
  output_log="${target_log_folder}/oneProvider.outputlog"
  error_log="${target_log_folder}/oneProvider.errorlog"
  
  expectedTime=3600s
  counterVal=1
  numTasks=40
  minVM=1
  maxVM=3
  
  # shellcheck disable=SC2086
  timeout --signal=2 $expectedTime "${COMPSs_exec}" \
     --project="${base_app_dir}"/project.xml \
     --resources="${base_app_dir}"/resources.xml \
     \
     --comm="$comm" \
     --conn=es.bsc.compss.connectors.DefaultNoSSHConnector \
     \
     --lang=python \
     --pythonpath="${base_app_dir}"/src \
     \
     --debug \
     ${runcompss_opts} \
     \
     "${base_app_dir}"/src/increment_elastic.py $counterVal $numTasks > >(tee "${output_log}") 2> >(tee "${error_log}" >&2)
    
  # Check timeout
  if [[ "$?" = "124" ]]; then
     # Copy LOG files
     cp -rf "${COMPSs_log_folder}"/increment_elastic.py_0"${retryNum}"/* "${target_log_folder}"
     
     # Report time out
     echo "[WARNING] Python Application timed out" >> "${output_log}"
     exitValue=124
  else
     # Copy LOG files
     cp -rf "${COMPSs_log_folder}"/increment_elastic.py_0"${retryNum}"/* "${target_log_folder}"
  
     # Check result
     sleep 10
     "${base_app_dir}"/result "${output_log}" "${target_log_folder}" $minVM $maxVM
     exitValue=$?
  fi

  #----------------------------------------------------------------------------------
  # Return execution status
  exit $exitValue
